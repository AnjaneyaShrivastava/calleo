{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\zoom\\\\client\\\\src\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createConext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = createConext();\nconst socket = io(\"http://localhost:5000\");\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [stream, setStream] = useState(null);\n  const [me, setMe] = useState('');\n  const [call, setCall] = useState({});\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState('');\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const ConnectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(currentStream => {\n      setStream(currentStream);\n      myVideo.current.srcObject = currentStream;\n    });\n    socket.on('me', id => setMe(id));\n    socket.on('calluser', _ref2 => {\n      let {\n        from,\n        name: callerName,\n        signal\n      } = _ref2;\n      setCall({\n        isReceivedCall: true,\n        from,\n        name: callerName,\n        signal\n      });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('answercall', {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on('signal', data => {\n      socket.emit('calluser', {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on('stream', currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on('callaccepted', signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(SocketContext.provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"vzQKHsGT0xg2sr2a5eZaR4ORcnQ=\");\n\n_c = ContextProvider;\nexport { ContextProvider, SocketContext }; // https://youtu.be/oxFr7we3LC8?t=1660\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["C:/Users/user/Desktop/zoom/client/src/Context.js"],"names":["React","createConext","useState","useRef","useEffect","io","Peer","SocketContext","socket","ContextProvider","children","stream","setStream","me","setMe","call","setCall","callAccepted","setCallAccepted","callEnded","setCallEnded","name","setName","myVideo","userVideo","ConnectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivedCall","answerCall","peer","initiator","trickle","data","emit","to","connectionRef","callUser","userToCall","signalData","leaveCall","destroy","window","location","reload"],"mappings":"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","sourcesContent":["import React, { createConext, useState, useRef, useEffect } from 'react';\r\nimport {io} from 'socket.io-client';\r\nimport Peer from 'simple-peer';\r\n\r\nconst SocketContext = createConext();\r\n\r\nconst socket = io(\"http://localhost:5000\")\r\n\r\nconst ContextProvider = ({ children }) => {\r\n    const [stream, setStream] = useState(null);\r\n    const [me, setMe] = useState('');\r\n    const [call, setCall] = useState({});\r\n    const [callAccepted, setCallAccepted] = useState(false);\r\n    const [callEnded, setCallEnded] = useState(false);\r\n    const [name, setName] = useState('');\r\n\r\n    const myVideo = useRef();\r\n    const userVideo = useRef();\r\n    const ConnectionRef = useRef();\r\n\r\n    useEffect(() => {\r\n        navigator.mediaDevices.getUserMedia({ video : true, audio : true })\r\n            .then((currentStream) => {\r\n                setStream(currentStream);    \r\n                \r\n                myVideo.current.srcObject = currentStream;\r\n            })\r\n\r\n        socket.on('me', (id) => setMe(id));\r\n\r\n        socket.on('calluser', ({ from, name: callerName, signal }) => {\r\n            setCall({ isReceivedCall : true, from, name: callerName, signal})\r\n        });\r\n    }, [])\r\n\r\n    const answerCall = () => {\r\n        setCallAccepted(true);\r\n\r\n        const peer = new Peer({ initiator: false, trickle: false, stream });\r\n\r\n        peer.on('signal', (data) => {\r\n            socket.emit('answercall', {signal : data, to: call.from });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) =>{\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        peer.signal(call.signal);\r\n\r\n        connectionRef.current = peer;\r\n    }\r\n\r\n    const callUser = (id) => {\r\n        const peer = new Peer({ initiator: true, trickle: false, stream });\r\n        \r\n        peer.on('signal', (data) => {\r\n            socket.emit('calluser', { userToCall: id, signalData: data, from: me, name });\r\n        });\r\n\r\n        peer.on('stream', (currentStream) =>{\r\n            userVideo.current.srcObject = currentStream;\r\n        });\r\n\r\n        socket.on('callaccepted', (signal) => {\r\n            setCallAccepted(true);\r\n\r\n            peer.signal(signal);\r\n        })\r\n    }\r\n\r\n    const leaveCall = () => {\r\n        setCallEnded(true);\r\n        \r\n        connectionRef.current.destroy();\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <SocketContext.provider value={{call,callAccepted,myVideo,userVideo,stream,name,setName,callEnded,me,callUser,leaveCall,answerCall,}}>\r\n            {children}\r\n        </SocketContext.provider>\r\n    );\r\n}\r\n\r\nexport { ContextProvider, SocketContext };\r\n\r\n// https://youtu.be/oxFr7we3LC8?t=1660"]},"metadata":{},"sourceType":"module"}